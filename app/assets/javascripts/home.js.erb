"use strict";

$(document).ready(function(){
  
  navigator.geolocation.getCurrentPosition(positionSuccess, positionError);

  function positionSuccess(position){
    var latitude = position.coords.latitude;
    var longitude = position.coords.longitude;
    
    var currentLocationRequest = stopMonitorRequest(latitude, longitude);
    findNearestStops(currentLocationRequest);
  }

  function positionError(error){
    return console.warn('ERROR: ' + error.code + ': ' + error.message);
  }

});
    

// Creates a URL for the MTA's stop API with the user's current location
function stopMonitorRequest(latitude, longitude){
  var response = "http://bustime.mta.info/api/where/stops-for-location.json?lat=" + latitude + "&lon=" + longitude + "&latSpan=0.003&lonSpan=0.003&key=<%= ENV['MTA_API_KEY'] %>" ;
  return response;
}

// Finds all the nearest bus stops
function findNearestStops(response){
  $.ajax({
    type: "GET",
    dataType: "jsonp",
    url: response,
    data: {},
    success: function(result){    
      debugger;
      var stopObjects = Array.prototype.slice.call(result.data.stops);
      requestStopData(stopObjects);
    }
  });
}

// Send a request for each stops latest info, display the request on page.
function requestStopData(stopObjects){
  
  stopObjects.forEach(function(stop){
  
    var route = "http://bustime.mta.info/api/siri/stop-monitoring.json?key=<%= ENV['MTA_API_KEY'] %>&MonitoringRef=" + stop.code;
      
    var thisStop = stop;
    
    $.ajax({
      type: "GET",
      dataType: "jsonp",
      url: route,
      data: {},
      success: function(result){
      
      var currentStopOBA = thisStop;
      var currentStopSiri = result.Siri.ServiceDelivery.StopMonitoringDelivery[0].MonitoredStopVisit;
      
      currentStopSiri.forEach(function(stop){
        
        if (currentStopSiri !== undefined){

          var currentStopOBA = thisStop;
          
          var busName = stop.MonitoredVehicleJourney.PublishedLineName;
          var busDestination = stop.MonitoredVehicleJourney.DestinationName;
          var busDistanceAway = stop.MonitoredVehicleJourney.MonitoredCall.Extensions.Distances.PresentableDistance;
          var busStopsAway = stop.MonitoredVehicleJourney.MonitoredCall.Extensions.Distances.StopsFromCall;

          $('.my-buttons').click(function(){
            $('#stops').append(
              "<div class='bus-item-header col-xs-12'>" + 
                "<h2>" + stop.MonitoredVehicleJourney.PublishedLineName + "</h2>" + "<br>" + "<span class='line-info'>"+ 
                currentStopOBA.name + "<br>" + currentStopOBA.code + "<br>" +
                "Destination: " + busDestination + "<br>" + "</span>"  
              + "</div>" + 
              "<div class='bus-item col-xs-12'>"
                + busDistanceAway + "<br>" +
                busStopsAway + " stops away" + "<p>" + "</div>"
              );        
          });
        }
      });     
      }
    });
  });
}
