"use strict";

$(document).ready(function(){

  navigator.geolocation.getCurrentPosition(positionSuccess, positionError);

  function positionSuccess(position){
    var latitude = position.coords.latitude;
    var longitude = position.coords.longitude;
    
    var currentLocationRequest = stopMonitorRequest(latitude, longitude);
    findNearestStops(currentLocationRequest);
  }

  function positionError(error){
    return console.warn('ERROR: ' + error.code + ': ' + error.message);
  }

});
    

// Creates a URL for the MTA's stop API with the user's current location
function stopMonitorRequest(latitude, longitude){
  var response = "http://bustime.mta.info/api/where/stops-for-location.json?lat=" + latitude + "&lon=" + longitude + "&latSpan=0.003&lonSpan=0.003&key=<%= ENV['MTA_API_KEY'] %>" ;
  return response;
}

// Finds all the nearest bus stops
function findNearestStops(response){
  $.ajax({
    type: "GET",
    dataType: "jsonp",
    url: response,
    data: {},
    success: function(result){    
      var stopObjects = Array.prototype.slice.call(result.data.stops);
      requestStopData(stopObjects);
    }
  });
}

// Send a request for each stops latest info
function requestStopData(stopObjects){
  
  stopObjects.forEach(function(stop){
  
    var route = "http://bustime.mta.info/api/siri/stop-monitoring.json?key=<%= ENV['MTA_API_KEY'] %>&MonitoringRef=" + stop.code;
      
    var thisStop = stop
    
    $.ajax({
      type: "GET",
      dataType: "jsonp",
      url: route,
      data: {},
      success: function(result){
      
      var currentStopOBA = thisStop;
      var currentStopSiri = result.Siri.ServiceDelivery.StopMonitoringDelivery[0].MonitoredStopVisit
      // debugger;
      currentStopSiri.forEach(function(stop){
        
        if (currentStopSiri !== undefined){

            var currentStopOBA = thisStop;
            // var distanceAway = MonitoredVehicleJourney.MonitoredCall.Extensions.Distances.PresentableDistance;
            // var busName = MonitoredVehicleJourney.PublishedLineName

          $('#stops').append(currentStopOBA.name + ": " +  + " / " + " <p>");        
        }

      });     

      }
    });
  });

}




// function setStopObjects(stopRequestResult, stopObjects){
//   debugger;
//   var readyBusStopObjects = [];
//   var siriResult = Array.prototype.slice.call(stopRequestResult)
//   stopObjects.forEach(function(stop){
//     stopRequestResult.forEach(function(siriStop){
      
//     })
//   });
// }



// function createBusStopObject(){

// }




// Appends stops to the page
// function placeOnPage(allStopsWithRoutes){
//   var routeObjects = [];
//   allStopsWithRoutes.forEach(function(stop){
//     // console.log(stop)
//     debugger;
//     routes.forEach(function(route){
//       routeObjects.push({
//         busName: route.busName,
//         crossStreets: stop.crossStreets,
//         stopLatitude: stop.latitude,
//         stopLongitude: stop.longitude,
//         busDestination: route.destination,
//         busDistanceAway: route.distanceAway,
//         busStopsAway: route.stopsAway
//       })
//     });
//   })
//   // console.log(routeObjects)
// }


    // $('#stops').append("Stop: " + stop.crossStreets + "<br>" +
      // stop.routes.forEach(function(route){
        // console.log("HI");
        // "Bus Name: " + busName + "<br>" + 
        // "Stops Away: " + stopsAway + "<br>" +
        // "Destination: " + destination + "<p>"
      // })
    // );    
