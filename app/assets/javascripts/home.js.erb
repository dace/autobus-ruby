"use strict";

$(document).ready(function(){

  navigator.geolocation.getCurrentPosition(positionSuccess, positionError);

  function positionSuccess(position){
    var latitude = position.coords.latitude;
    var longitude = position.coords.longitude;
    
    var currentLocationRequest = stopMonitorRequest(latitude, longitude);
    findNearestStops(currentLocationRequest);
  }

  function positionError(error){
    return console.warn('ERROR: ' + error.code + ': ' + error.message);
  }

});
    

// // Creates a URL for the MTA's stop API with the user's current location
function stopMonitorRequest(latitude, longitude){
  var response = "http://bustime.mta.info/api/where/stops-for-location.json?lat=" + latitude + "&lon=" + longitude + "&latSpan=0.003&lonSpan=0.003&key=<%= ENV['MTA_API_KEY'] %>" ;
  return response;
}

// // Finds all the nearest bus stops
function findNearestStops(response){
  $.ajax({
    type: "GET",
    dataType: "jsonp",
    url: response,
    data: {},
    success: function(result){    
      var stopObjects = Array.prototype.slice.call(result.data.stops);
      setStopObjects(stopObjects);
    }
  });
}


// Set stops objects
function setStopObjects(stopObjects){
  var setStops = [];

  stopObjects.forEach(function(stop){
    setStops.push({
      crossStreets: stop.name,
      stopID: stop.code,
      latitude: stop.lat,
      longitude: stop.lon,
      routes: []
    });
  });

  getArrivingBuses(setStops);
}

// Sets routes and arriving buses for each stop

function getArrivingBuses(setStops){
  
  var allStopsWithRoutes = setStops;

  allStopsWithRoutes.forEach(function(stop){
    var route = "http://bustime.mta.info/api/siri/stop-monitoring.json?key=<%= ENV['MTA_API_KEY'] %>&MonitoringRef=" + stop.stopID;
   
      $.ajax({
        type: "GET",
        dataType: "jsonp",
        url: route,
        data: {},
        success: function(result){
          
          var nextBuses = result.Siri.ServiceDelivery.StopMonitoringDelivery;

          nextBuses.forEach(function(thisBus){
            thisBus.MonitoredStopVisit.forEach(function(stopVisit){
              
              var busNameAPI = stopVisit.MonitoredVehicleJourney.PublishedLineName;
              var busDistanceAPI = stopVisit.MonitoredVehicleJourney.MonitoredCall.Extensions.Distances.PresentableDistance;
              var busStopsAwayAPI = stopVisit.MonitoredVehicleJourney.MonitoredCall.Extensions.Distances.StopsFromCall;
              var busDestinationAPI = stopVisit.MonitoredVehicleJourney.DestinationName;

              stop.routes.push({
                busName: busNameAPI,
                distanceAway: busDistanceAPI,
                stopsAway: busStopsAwayAPI,
                destination: busDestinationAPI
              });   
            });
          });
        }
      });
  });
  
}

